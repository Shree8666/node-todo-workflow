name: Node.js Microservice CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run SonarQube scan on SonarQube EC2
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      # Step 5: SSH into Deployment EC2 & deploy Docker Compose
      - name: SSH & Deploy Docker Compose
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            DEPLOY_DIR=/home/ec2-user/node-microservice

            # Ensure folder exists
            mkdir -p $DEPLOY_DIR

            # Copy code from runner to EC2
            rsync -av --delete ./ ${{ secrets.EC2_USER }}@$DEPLOY_DIR/

            cd $DEPLOY_DIR
            docker compose pull
            docker compose build --no-cache
            docker compose up -d --force-recreate
            docker image prune -f
